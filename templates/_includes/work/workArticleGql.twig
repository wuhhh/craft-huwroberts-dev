<template
  x-if="$store.global.slideoverTemplate === 'work' && entry"
  x-data="{
    {# map store to local variables #}
    entry: $store.work.selected,
    loadingIndicator: () => $store.work.loadingIndicator,
    hasPrev: () => $store.work.hasPrev(),
    hasNext: () => $store.work.hasNext(),
    prev: () => $store.work.prev(),
    next: () => $store.work.next(),
    fetchPrev: () => $store.work.fetchPrev(),
    fetchNext: () => $store.work.fetchNext(),
    setLoading: (state) => $store.work.setLoading(state),
    toggleLoading: () => $store.work.toggleLoading(),

    init() {
      this.$watch('$store.work.selected', value => this.entry = value);
    },
  }"
  :key="entry.id"
>

  <article
    class="work-article group/l grid grid-cols-12 w-full max-w-[736px] ml-auto lg:pt-16 lg:max-w-none lg:ml-0 lg:gap-x-10"
    :data-l="loadingIndicator"
  >
    <div class="pointer-events-auto bg-zinc-50 col-span-full pb-16 sm:pt-[152px] md:pb-[72px] lg:pt-0 lg:col-span-7 lg:col-start-5 2xl:pb-24">

      {# Nav #}

      <nav class="sticky top-24 z-20 sm:relative sm:top-auto sm:z-10 sm:mb-14 xs-mono-capped flex justify-between h-[45px] lg:h-[39px]">

        {# Fill background to viewport edges #}
        <div class="absolute -inset-x-[26px] bg-stone/95 backdrop-blur-sm inset-y-0 sm:hidden"></div>

        {# Close slideover #}

        <button
          @click="close()"
          class="relative flex items-center gap-x-2 group h-full"
        >
          <span class="relative flex h-full items-center text-slate-50">
            <span class="size-[13px] rounded-full bg-seabed-indigo-400 flex items-center justify-center transition duration-100 group-hover:scale-125"></span>
            <svg class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2" width="7" height="7" viewBox="0 0 7 7" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M1 1L6 6M6 1L1 6" stroke="currentColor"/>
            </svg>
          </span>
          <span x-text="t('Close')" class="text-seabed-indigo-400 group-hover:underline"></span>
        </button>

        {# Adjacent entries #}

        <div class="relative flex items-center gap-x-5 h-full">
          <button
            class="flex gap-x-[6px] h-full items-center pointer-events-auto text-seabed-indigo-400 group"
            :class="{ 'pointer-events-none opacity-30 !cursor-default': !hasPrev() }"
            :tabindex="hasPrev() ? 0 : -1"
            aria-label="Previous project"
            @mouseenter="fetchPrev()"
            @click="prev()"
          >
            <svg class="transition duration-200 ease-in-out translate-y-px group-hover:-translate-x-0.5" width="5" height="7" viewBox="0 0 5 7" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M4 6.5L1 3.5L4 0.5" stroke="currentColor"/>
            </svg>
            <span x-text="t('Previous')" class="group-hover:underline"></span>
          </button>

          <button
            class="flex gap-x-[6px] h-full items-center pointer-events-auto text-seabed-indigo-400 group"
            :class="{ 'pointer-events-none opacity-30 !cursor-default': !hasNext() }"
            :tabindex="hasNext() ? 0 : -1"
            aria-label="Next project"
            @mouseenter="fetchNext()"
            @click="next()"
          >
            <span x-text="t('Next')" class="group-hover:underline"></span>
            <svg class="transition duration-200 ease-in-out translate-y-px group-hover:translate-x-0.5" width="5" height="7" viewBox="0 0 5 7" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M1 6.5L4 3.5L1 0.5" stroke="currentColor"/>
            </svg>
          </button>
        </div>

      </nav>

      <div class="pt-[160px] space-y-10 sm:pt-0 sm:space-y-14">

        <div class="relative z-10 space-y-10 lg:space-y-0 lg:flex lg:flex-wrap lg:items-start lg:gap-4">

          {# Title #}

          <h2
            x-dialog:title
            x-text="entry.title"
            data-loading-indicator
            class="work-article__title relative font-medium heading3 md:heading1 !leading-none"
            :aria-label="t('{0} project details', [entry.title])"
          ></h2>

          {# Live url #}

          <template x-if="entry.liveUrl">
            <a
              data-loading-indicator
              class="work-article__live-url bg-stone text-black rounded-full py-[6px] pl-3 pr-4 inline-flex gap-x-[7px] items-center transition-colors duration-200 hover:bg-transparent -translate-y-0.5 lg:translate-y-0 lg:mt-1"
              :href="entry.liveUrl"
              target="_blank"
              rel="noopener noreferrer"
              :aria-label="t('View live site, opens in new tab')"
            >
              <span class="rounded-full size-[11px] bg-coral-red mr-[2px]"></span>
              <span class="font-mono text-[13px] leading-normal uppercase" x-text="t('View Live')"></span>
              {{ svg('@webroot/dist/images/icon--external-link.svg', true, true)|attr({ class: "size-3" }) }}
            </a>
          </template>
        </div>

        {# Media #}

        {% include "_includes/work/workArticleMediaGql" only %}

        {# Summary #}

        <template x-if="entry.summary">
          <p
            x-text="entry.summary"
            data-loading-indicator
            class="work-article__summary relative z-10 w-full max-w-[752px]"
          ></p>
        </template>

        {# Tags #}
        <template x-if="entry.techTags.length">
          <div>
            {% include "_includes/tagsGql" only %}
          </div>
        </template>

        {# Meta #}
        {% include "_includes/work/workCardMetaGql" with {
          class: "work-article__meta relative z-10 sm-mono leading-tight",
        } only %}

      </div>
    </div>
  </article>

</template>
