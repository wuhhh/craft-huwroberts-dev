<template
  x-if="entry.video[0]?.url || entry.cardImage[0]?.url"
  x-data="{
    {# map store to local variables #}
    entry: $store.work.selected,
    backdropColour: () => {
      const backdropColour = entry.backdropColour;
      return backdropColour != '' ? backdropColour : 'bg-zinc-100';
    },

    init() {
      this.$watch('$store.work.selected', value => this.entry = value);
    },
  }"
>
  <div
    x-data="{
      ...mediaControls(),
      ...{
        showVideo: false,

        init() {
          this.$nextTick(() => {
            this.initialiseMediaControls(this.$refs.video);
          });

          this.$watch('$store.work.selected', value => {
            this.showVideo = false;
          });

          this.$watch('$store.global.slideoverOpen', value => {
            if (!value) {
              this.handleSlideoverClose();
            }
          });
        },

        handleSlideoverClose() {
          if (this.$refs.video && this.showVideo) {
            this.pause();
          }
        },
      },
    }"
    class="w-full max-w-[1160px]"
  >
    <div
      class="work-article__media-backdrop aspect-[1160/680] rounded-sm flex items-center justify-center shadow-sm sm:shadow-none sm-down:bg-transparent"
      :class="backdropColour"
    >
      <div class="relative aspect-[960/576] w-full sm:max-w-[clamp(414px,960px,83%)] overflow-hidden group/frame">

        <template x-if="entry.video[0].url">
          <div>
            <div class="absolute inset-0">

              {# == Video == #}
              <video
                x-ref="video"
                @click="play()"
                muted
                playsinline
                class="cursor-pointer object-cover object-top w-full h-full rounded-sm"
                :src="entry.video[0]?.url"
                :type="entry.video[0]?.mimeType"
              ></video>

              {# == Controls == #}
              <div class="sr-only">Video controls</div>
              <div
                x-ref="controls"
                class="absolute inset-x-0 bottom-0 z-30 h-12 md:h-[72px] pl-[2px] md:pl-2.5 pr-4 md:pr-6 flex items-center opacity-0 group-hover/frame:opacity-100 duration-200 focus-within:opacity-100 peer"
                :class="{
                  'opacity-100': paused,
                }"
              >

                {# == Play/pause == #}
                <button
                  @click="play(); showVideo = true"
                  class="size-[44px] flex items-center justify-center"
                  :aria-label="paused ? 'Play' : 'Pause'"
                >
                  <span x-show="paused || stopped">
                    {{ svg('@webroot/dist/images/icon--play.svg', true, true)|attr({ class: 'w-auto h-2.5 md:h-[15px] text-slate-50' }) }}
                  </span>
                  <span x-show="!paused && !stopped">
                    {{ svg('@webroot/dist/images/icon--paused.svg', true, true)|attr({ class: 'w-auto h-2 md:h-3 text-slate-50' }) }}
                  </span>
                </button>

                {# == Progress == #}
                <button
                  x-data="{
                    hover: false,
                    seek: 0,
                  }"
                  x-init="() => {
                    $watch('$store.global.mouseCoords', (state) => {
                      if(hover) {
                        let x = $store.global.mouseCoords[0] - $el.getBoundingClientRect().left
                        let w = $el.getBoundingClientRect().width
                        seek = x / w
                      }
                    })
                    $watch('hover', (state) => {
                      if(!state) seek = 0
                    })
                  }"
                  @mouseenter="hover = true"
                  @mouseleave="hover = false"
                  @keydown.left.prevent="media.currentTime -= 5"
                  @keydown.right.prevent="media.currentTime += 5"
                  @click="media.currentTime = duration * seek"
                  data-keydown-priority="ArrowLeft,ArrowRight"
                  class="flex-grow h-full ml-[3px] md:ml-2.5 cursor-pointer"
                  aria-label="Seek"
                >
                  <span class="relative w-full h-full flex items-center">

                    {# Track #}
                    <span class="absolute inset-x-0 top-1/2 -translate-y-1/2 h-1 bg-neutral-900"></span>

                    {# Progress #}
                    <span
                      :style="`transform:scaleX(${currentTime / duration})`"
                      class="absolute inset-x-0 top-1/2 -mt-0.5 h-1 origin-left bg-coral-red"
                    ></span>

                    {# Seek visual #}
                    <span
                      x-ref="seekVisual"
                      :style="`transform:scaleX(${seek})`"
                      class="absolute inset-x-0 top-1/2 -mt-0.5 h-1 origin-left bg-slate-50/25 mix-blend-lighten"
                    ></span>

                  </span>
                </button>

                {# == Time == #}
                <div class="ml-4 md:ml-6 flex items-center gap-x-[6px]">
                  <span class="xs-mono md:sm-mono text-slate-100/85 leading-none" x-text="formatTime(currentTime)">0:00</span>
                  <span aria-hidden class="xs-mono md:sm-mono text-slate-100/85 leading-none">/</span>
                  <span class="xs-mono md:sm-mono text-slate-100/85 leading-none" x-text="formatTime(duration)">1:23</span>
                </div>
              </div>

              {# == Underlay/background blur == #}
              <div
                class="pointer-events-none absolute inset-x-0 bottom-0 z-20 h-12 md:h-[72px] bg-zinc-900/90 backdrop-blur-sm opacity-0 translate-y-4 group-hover/frame:opacity-100 group-hover/frame:translate-y-0 duration-200 peer-focus-within:!opacity-100 peer-focus-within:!translate-y-0"
                :class="{ '!opacity-100 !translate-y-0': paused }"
              ></div>
            </div>

            {# == Poster == #}
            <template x-if="entry.cardImage[0]?.url">
              <button
                @click="() => {
                  showVideo = true;
                  play();
                  $focus.within($refs.controls).first();
                }"
                x-show="!showVideo"
                class="absolute inset-0 cursor-pointer"
                aria-label="Play video"
              >
                <img
                  x-data
                  x-init="$watch('entry.cardImage[0]', () => {
                    $el.src = entry.cardImage[0].blurhashUri
                    $el.srcset = ''
                    $nextTick(() => {
                      $el.src = entry.cardImage[0]?.url
                      $el.srcset = entry.cardImage[0]?.srcset
                    })
                  })"
                  :src="entry.cardImage[0]?.url"
                  :srcset="entry.cardImage[0]?.srcset"
                  :alt="$store.work.selected?.title + ' video poster image'"
                  sizes="(min-width: 1024px) 746px, (min-width: 640px) 611px, (max-width: 639px) 90vw"
                  class="object-cover w-full h-full rounded-sm"
                />
                <span style="background: radial-gradient(rgba(255,255,255,1.0), rgba(255,255,255,0));" class="absolute inset-0 z-10 opacity-5"></span>
                <span
                  class="group/btn absolute left-1/2 top-1/2 z-10 size-12 md:size-20 -translate-x-1/2 -translate-y-1/2 transition duration-200 ease-in-out opacity-0 group-hover/frame:opacity-100"
                  :class="{ 'hover-none:opacity-100': !showVideo }"
                >
                  <span class="absolute inset-0 bg-zinc-900/90 group-hover/btn:bg-coral-red rounded-full transition group-hover/btn:scale-105 duration-200 ease-in-out"></span>
                  {{ svg('@webroot/dist/images/icon--play.svg', true, true)|attr({ class: 'absolute top-1/2 left-1/2 z-10 -translate-x-1/2 -translate-y-1/2 w-3 md:w-5 text-white ml-px md:ml-[3px]' }) }}
                </span>
              </button>
            </template>
          </div>
        </template>

        <template x-if="!entry.video[0]?.url && entry.cardImage[0]?.url">
          {# == Image == #}
          <img
            x-data
            @slideover-post-update.window="$el.src = ''; $el.srcset = ''"
            :src="entry.cardImage[0]?.url"
            :srcset="entry.cardImage[0]?.srcset"
            :alt="$store.work.selected?.title + ' image'"
            sizes="(min-width: 1024px) 746px, (min-width: 640px) 611px, (max-width: 639px) 90vw"
            class="object-cover w-full h-full rounded-sm"
          />
        </template>

        {# == Work loading indicator == #}
        <div data-loading-indicator class="work-article__media-loading z-30"></div>

      </div>
    </div>
  </div>
</template>
